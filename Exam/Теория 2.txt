Основы Ruby. Массивы. Классы. Модули.

Ruby - динамический язык, поэтому нам не надо думать об выделении памяти под массив. Пример реализации массива.

array = [] # Создание массива

array.push 1 # Добавление элемента

array.pop 1 # Удаление элемента



Базовый классом для всех классов является класс Object. Имя любого класса есть константа, указывающая на экземпляр класса Class. Пример реализации класса.

class Point

    attr_accessor :x, :y # Создает методы чтения и записи атрибутов

    def initialize(x, y) # Конструктор

        @x, @y = x, y # @x и @y - переменные экземпляра

    end

    def print

        puts "x = #{@x}, y = #{@y}"

    end

end

point = Point.new(5, 7) # Создаем объект класса

point.print



Модули нужны, чтобы расширять возможность классов. 
Так, добавив стандартный модуль Enumerable и реализовав всего один метод each, мы получим много нужных методов для нашего класса. 
Для модулей нельзя создавать объекты. Подключаются они в класс с помощью include имя_модуля. Пример модуля.

module MyModule

    def print

        puts "Hello world"

    end

end



